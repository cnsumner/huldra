name: Build & Release

on:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    container:
      image:  dart:latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install dependencies
      run: dart pub get
    - name: Build
      run: dart compile exe ./bin/main.dart -o ./huldra
    - name: Get version
      run: |
        echo "TAG_NAME=$(cat ./pubspec.yaml | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]')" >> $GITHUB_ENV
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.TAG_NAME }}
        release_name: Release v${{ env.TAG_NAME }}
        draft: false
        prerelease: false
    - name: Upload artifacts
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./huldra
        asset_name: huldra
        asset_content_type: application/octet-stream
